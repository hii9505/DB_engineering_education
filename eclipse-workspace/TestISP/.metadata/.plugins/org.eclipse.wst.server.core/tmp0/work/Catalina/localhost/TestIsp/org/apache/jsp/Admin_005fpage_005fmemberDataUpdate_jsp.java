/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.29
 * Generated at: 2019-12-19 05:07:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class Admin_005fpage_005fmemberDataUpdate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
 request.setCharacterEncoding("euc-kr"); 
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv =\"Content-Type\" content=\"text/html ; charset=EUC-KR\">\r\n");
      out.write("<title>Update member info</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
 
	String id = request.getParameter("id");
	out.print("id:"+id);
	Connection conn = null;
	PreparedStatement pstmt = null;
	ResultSet rs = null;
	String str = "";
	try {
		String jdbcUrl = "jdbc:mysql://localhost:3306/termproject";
		String dbId = "root";
		String dbPass = "1234";
		
		Class.forName("com.mysql.jdbc.Driver");
		conn = DriverManager.getConnection(jdbcUrl,dbId,dbPass);
		String sql = "select *from member where id= ? ";
		pstmt = conn.prepareStatement(sql);
		pstmt.setString(1,id);
		rs = pstmt.executeQuery();
		if(rs.next()){
		
      out.write("\r\n");
      out.write("\t\t<form method=\"post\" action=\"Admin_page_memberDataUpdatePro.jsp\">\r\n");
      out.write("\t\t<ul>\r\n");
      out.write("\t\t\t<li>\r\n");
      out.write("\t\t\t\tID : ");
      out.print(rs.getString("id") );
      out.write(" (not allowed to change)\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"id\" value=");
      out.print(rs.getString("id") );
      out.write(">\r\n");
      out.write("\t\t\t</li>\r\n");
      out.write("\t\t\t<li>\r\n");
      out.write("\t\t\t\tPW : ");
      out.print(rs.getString("pw") );
      out.write(" ->\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"up_pw\" value=");
      out.print(rs.getString("pw") );
      out.write(">\r\n");
      out.write("\t\t\t</li> \r\n");
      out.write("\t\t\t<li>\r\n");
      out.write("\t\t\t\tNAME : ");
      out.print(rs.getString("usr_name") );
      out.write(" ->\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"up_name\"value = ");
      out.print(rs.getString("usr_name") );
      out.write(">\r\n");
      out.write("\t\t\t</li>\r\n");
      out.write("\t\t\t<li>\r\n");
      out.write("\t\t\t\tEMAIL: ");
      out.print(rs.getString("email") );
      out.write(" ->\r\n");
      out.write("\t\t\t\t<input type = \"text\" name=\"up_email\" value = ");
      out.print(rs.getString("email") );
      out.write(">\r\n");
      out.write("\t\t\t</li>\r\n");
      out.write("\t\t\t<li>\r\n");
      out.write("\t\t\t\tPhone: ");
      out.print(rs.getString("phoneNum") );
      out.write(" ->\r\n");
      out.write("\t\t\t\t<input type = \"text\" name=\"up_phone\" value = ");
      out.print(rs.getString("phoneNum") );
      out.write(">\r\n");
      out.write("\t\t\t</li>\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t\t ");

		 if (rs.getString("memStat").equals("student")){
			 
      out.write("\r\n");
      out.write("\t\t\t    구분: <input type=\"RADIO\" id = \"stat\" name = \"stat\" value=student CHECKED>학부생\r\n");
      out.write("                      <input type=\"RADIO\" id = \"stat\" name = \"stat\" value=graduated>대학원생\r\n");
      out.write("                      <input type=\"RADIO\" id = \"stat\" name = \"stat\" value=faculty_member>교직원</br>\r\n");
      out.write("\t\t\t ");

		 } else if(rs.getString("memStat").equals("graduated")){
			 
      out.write("\r\n");
      out.write("\t\t\t    구분: <input type=\"RADIO\" id = \"stat\" name = \"stat\" value=student >학부생\r\n");
      out.write("                      <input type=\"RADIO\" id = \"stat\" name = \"stat\" value=graduated checked>대학원생\r\n");
      out.write("                      <input type=\"RADIO\" id = \"stat\" name = \"stat\" value=faculty_member>교직원</br>\r\n");
      out.write("\t\t\t ");

		 } else { //faculty member
			 
      out.write("\r\n");
      out.write("\t\t\t    구분: <input type=\"RADIO\" id = \"stat\" name = \"stat\" value=student>학부생\r\n");
      out.write("                      <input type=\"RADIO\" id = \"stat\" name = \"stat\" value=graduated>대학원생\r\n");
      out.write("                      <input type=\"RADIO\" id = \"stat\" name = \"stat\" value=faculty_member checked>교직원</br>\r\n");
      out.write("\t\t\t ");

		 }
		 
      out.write("\r\n");
      out.write("\t\t<input type=\"submit\" value=\"수정\">\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t");
 
		}
	}catch (Exception e){
		e.printStackTrace();
		str = "member 테이블에 새로운 레코드 추가에 실패했습니다."; 
	} finally{
		if(rs != null) try{rs.close();}catch(SQLException sqle){}
		if(pstmt != null) try{pstmt.close();}catch(SQLException sqle){}
		if(conn != null) try{conn.close();}catch(SQLException sqle){}
	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<button onclick=\"history.back(-1);\">돌아가기</button>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
