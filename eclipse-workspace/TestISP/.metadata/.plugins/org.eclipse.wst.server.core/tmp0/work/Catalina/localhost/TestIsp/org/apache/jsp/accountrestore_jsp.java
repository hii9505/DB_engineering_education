/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.29
 * Generated at: 2019-12-19 05:22:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class accountrestore_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
 request.setCharacterEncoding("EUC-KR"); 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	
	Connection conn = null;
	PreparedStatement pstmt = null;
	String str = "";
	ResultSet rs = null;
	
	try{
		String jdbcUrl = "jdbc:mysql://localhost:3306/db_test?serverTimezone=UTC&useSSL=false";
		String dbId = "root";
		String dbPass = "1234";
		
		//db 연동 Connection 객체
		Class.forName("com.mysql.jdbc.Driver");
		conn = DriverManager.getConnection(jdbcUrl, dbId, dbPass);
		// 쿼리를 수행
		String sql ="select * from db_test.member where id=?";
		pstmt = conn.prepareStatement(sql);
		
		rs=pstmt.executeQuery();
		while (rs.next())
		
		
		
		//쿼리 성공 수행
		str = "수정에 성공하였습니다";
	}catch(Exception e){
		e.printStackTrace();
		str = "수정에 실패했습니다.";
	}finally{
		if(pstmt != null)try{pstmt.close();}catch(SQLException sqle){}
		if(conn != null)try{conn.close();}catch(SQLException sqle){}
	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html \"charset=\"EUC-KR\">\r\n");
      out.write("<title>레코드 추가</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("    #background{\r\n");
      out.write("        background: #cccccc;\r\n");
      out.write("        height: 1000px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #title{\r\n");
      out.write("        background: black;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("   \r\n");
      out.write("    #Line_front{\r\n");
      out.write("        background: black;\r\n");
      out.write("        height: 50px;\r\n");
      out.write("        width: 600px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #id{\r\n");
      out.write("        height: 25px;\r\n");
      out.write("        width: 500px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #name{\r\n");
      out.write("        height: 25px;\r\n");
      out.write("        width: 500px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    #email{\r\n");
      out.write("        height: 25px;\r\n");
      out.write("        width: 500px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #phone_number{\r\n");
      out.write("        height: 25px;\r\n");
      out.write("        width: 500px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #pwd{\r\n");
      out.write("        height: 25px;\r\n");
      out.write("        width: 500px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #pwd_check{\r\n");
      out.write("        height: 25px;\r\n");
      out.write("        width: 500px;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id = \"background\">\r\n");
      out.write("        <div id = \"container\">        \r\n");
      out.write("            <div id=\"title\"><font size=\"10\" color=\"red\"><strong>DB05</strong></font></div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <center>\r\n");
      out.write("             <p>\r\n");
      out.write("                 <div><strong>아이디 이외에 수정하실 정보를 입력하세요</strong></div>\r\n");
      out.write("             </p>   \r\n");
      out.write("\r\n");
      out.write("\t\t \t<form method=\"post\" action=\"restorecheck.jsp\">\r\n");
      out.write("          \t\t\t<div>아이디: ");
      out.print( (String)session.getAttribute("id") );
      out.write("</div>\r\n");
      out.write("          \t\t\t비밀번호:<input type=\"text\" id = \"pwd\" name = \"pwd\" placeholder=\"비밀번호\"></br>\r\n");
      out.write("                                             이메일   :<input type=\"text\" id = \"email\" name = \"email\" placeholder=\"이메일\"></br>\r\n");
      out.write("                                             전화번호:<input type=\"text\" id = \"phone_number\" name = \"phone_number\" placeholder=\"전화번호\"></br>\r\n");
      out.write("                   \t이름      :<input type=\"text\" id = \"name\" name = \"name\" placeholder=\"이름\"></br>\r\n");
      out.write("                   \t구분: <input type=\"RADIO\" id = \"stat\" name = \"stat\" value=Undergrduate CHECKED>학부생\r\n");
      out.write("                   \t<input type=\"RADIO\" id = \"stat\" name = \"stat\" value=Graduate_school>대학원생\r\n");
      out.write("                   \t<input type=\"RADIO\" id = \"stat\" name = \"stat\" value=faculty_member>교직원</br>\r\n");
      out.write("            <input type=\"submit\" value=\"확인\" onclick=\"Question();\">\r\n");
      out.write("            \r\n");
      out.write("\t\t \t</form>\r\n");
      out.write("        </center>    \r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function Question(){\r\n");
      out.write("\t\r\n");
      out.write("var result = confirm(\"실행하시겠어요:?\");\r\n");
      out.write("\t\r\n");
      out.write("\tif(result)\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\tdocument.write(\"<h1> 실행합니다. </h1>\")\r\n");
      out.write("\t\t\t\t\t<form method=\"post\" action=\"restorecheck.jsp\">\r\n");
      out.write("\t\t\t\t\t<input type=\"submit\" value=\"확인\" onclick=\"Question();\">\r\n");
      out.write("\t\t\t\t\t</form>\")\r\n");
      out.write("\t\t}\r\n");
      out.write("\telse{\r\n");
      out.write("\t\t\tdocument.write(\"<h1> 정보 수정을 취소하였습니다. </h1>\")\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
